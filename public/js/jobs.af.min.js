"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}/**
 * jobs_af array store all generated classes
 */var jobs_af=jobs_af||[],jobsAfurl={webBase:"https://www.jobs.af/",apiBase:"https://www.jobs.af/api/v2.4/"},JobsAfList=/*#__PURE__*/function(){/**
     * Constructor
     * Get jobs object and save
     * @param {*} jobs 
     */function JobsAfList(a){_classCallCheck(this,JobsAfList),this.jobs=a}/**
     * Return rendered list html doms
     */return _createClass(JobsAfList,[{key:"getContainer",value:function getContainer(){var a=this,b="";return this.jobs.forEach(function(c){b+=a.renderListItem(c)}),this.renderContainer(b)}/**
     * Render html dom
     * @param {*} renderedList 
     */},{key:"renderContainer",value:function renderContainer(a){return"<div class=\"job-af-list\">"+a+"</div>"}/**
     * Return rendered job list item
     * @param {*} job 
     */},{key:"renderListItem",value:function renderListItem(a){return"\n            <div class=\"jobs-af-list-item\">\n                <div class=\"jobs-af-list-item-photo\"><img src=\"".concat(this.renderListItemPhoto(a.company),"\" /></div>\n                <div class=\"jobs-af-list-item-content\">\n                    <div class=\"jobs-af-list-item-content-title\">\n                        <div class=\"title\">\n                            <a target=\"_blank\" href=\"").concat(jobsAfurl.webBase+"jobs/"+a.slug,"\">").concat(a.position,"</a>\n                        </div>\n                        <div class=\"status\">\n                            ").concat(this.renderListItemStatus(a.status),"\n                            ").concat(this.renderListItemGender(a.gender),"\n                            ").concat(this.renderListItemFeatured(a.isFeatured),"\n                        </div>\n                    </div>\n                    <div class=\"jobs-af-list-item-content-details\">\n                        <div class=\"details\">\n                            <span class=\"date\">").concat(this.renderListItemDate(a.expireDate),"</span> | <span>").concat(a.locations[0],", ").concat(a.locations[1],"</span>\n                        </div>\n                        <div class=\"actions\">\n                            <a  target=\"_blank\" class=\"apply-link\" href=\"").concat(jobsAfurl.webBase+"jobs/"+a.slug+"/apply","\">Apply</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ")}/**
     * Handle job list photo
     * @param {*} company 
     */},{key:"renderListItemPhoto",value:function renderListItemPhoto(a){return null!=a.businessUnit.logo||null!=a.businessUnit.logo?jobsAfurl.apiBase+"uploadFile/"+a.businessUnit.logo.container+"/"+a.businessUnit.logo.name:null!=a.logo||null!=a.logo?jobsAfurl.apiBase+"uploadFile/"+a.logo.container+"/"+a.logo.name:"https://www.jobs.af/assets/img/img/company.jpg"}/**
     * Handle job list item gender
     * @param {*} gender 
     */},{key:"renderListItemGender",value:function renderListItemGender(a){return"Any"==a?"":"<span class=\"gender\">".concat(a,"</span>")}/**
     * Handle job list item status
     * @param {*} status 
     */},{key:"renderListItemStatus",value:function renderListItemStatus(a){return"New"==a?"<span class=\"status-badge\">New</span>":""}/**
     * Handle job list isFeatured status
     * @param {*} isFeatured 
     */},{key:"renderListItemFeatured",value:function renderListItemFeatured(a){return a?"<span class=\"is-promoted\">Promoted</span>":""}/**
     * Handle and convert job close date to human readable
     * @param {*} dateString 
     */},{key:"renderListItemDate",value:function renderListItemDate(a){var b=new Date(a);return["January","February","March","April","May","June","July","August","September","October","November","December"][b.getMonth()]+" "+(b.getDay()+1)+", "+b.getFullYear()}}]),JobsAfList}(),JobsAfTable=/*#__PURE__*/function(){/**
     * Constructor
     * Get jobs object and save
     * @param {*} jobs 
     */function JobsAfTable(a){_classCallCheck(this,JobsAfTable),this.jobs=a}/**
     * Return rendered list html doms
     */return _createClass(JobsAfTable,[{key:"getContainer",value:function getContainer(){var a=this,b="";return this.jobs.forEach(function(c){b+=a.renderTableItem(c)}),this.renderContainer(b)}/**
     * Render html dom
     * @param {*} renderedList 
     */},{key:"renderContainer",value:function renderContainer(a){return"<div class=\"jobs-af-table\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Position</th>\n                        <th>Location</th>\n                        <th>Close date</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>".concat(a,"</tbody>\n            </table>\n        </div>")}/**
     * Return rendered job list item
     * @param {*} job 
     */},{key:"renderTableItem",value:function renderTableItem(a){return"\n            <tr>\n                <td class=\"title\">\n                    <a href=\"".concat(jobsAfurl.webBase+"jobs/"+a.slug,"\">").concat(a.position,"</a>\n                    ").concat(this.renderTableItemStatus(a.status),"\n                    ").concat(this.renderTableItemGender(a.gender),"\n                    ").concat(this.renderTableItemFeatured(a.isFeatured),"\n                </td>\n                <td class=\"location\"><span>").concat(a.locations[0],", ").concat(a.locations[1],"</span></td>\n                <td class=\"date\">").concat(this.renderTableItemDate(a.expireDate),"</td>\n                <td class=\"action\"><a  target=\"_blank\" class=\"apply-link\" href=\"").concat(jobsAfurl.webBase+"jobs/"+a.slug+"/apply","\">Apply</a></td>\n            </tr>\n        ")}/**
     * Handle job table photo
     * @param {*} company 
     */},{key:"renderTableItemPhoto",value:function renderTableItemPhoto(a){return null!=a.businessUnit.logo||null!=a.businessUnit.logo?jobsAfurl.apiBase+"uploadFile/"+a.businessUnit.logo.container+"/"+a.businessUnit.logo.name:null!=a.logo||null!=a.logo?jobsAfurl.apiBase+"uploadFile/"+a.logo.container+"/"+a.logo.name:"https://www.jobs.af/assets/img/img/company.jpg"}/**
     * Handle job table item gender
     * @param {*} gender 
     */},{key:"renderTableItemGender",value:function renderTableItemGender(a){return"Any"==a?"":"<span class=\"gender\">".concat(a,"</span>")}/**
     * Handle job table item status
     * @param {*} status 
     */},{key:"renderTableItemStatus",value:function renderTableItemStatus(a){return"New"==a?"<span class=\"status-badge\">New</span>":""}/**
     * Handle job table isFeatured status
     * @param {*} isFeatured 
     */},{key:"renderTableItemFeatured",value:function renderTableItemFeatured(a){return a?"<span class=\"is-promoted\">Promoted</span>":""}/**
     * Handle and convert job close date to human readable
     * @param {*} dateString 
     */},{key:"renderTableItemDate",value:function renderTableItemDate(a){var b=new Date(a);return["January","February","March","April","May","June","July","August","September","October","November","December"][b.getMonth()]+" "+(b.getDay()+1)+", "+b.getFullYear()}}]),JobsAfTable}(),JobsAfWidget=/*#__PURE__*/function(){/**
     * Constructor
     * Get jobs object and save
     * @param {*} jobs 
     */function JobsAfWidget(a){_classCallCheck(this,JobsAfWidget),this.jobs=a}/**
     * Return rendered list html doms
     */return _createClass(JobsAfWidget,[{key:"getContainer",value:function getContainer(){var a=this,b="";return this.jobs.forEach(function(c){b+=a.renderWidgetItem(c)}),this.renderContainer(b)}/**
     * Render html dom
     * @param {*} renderedList 
     */},{key:"renderContainer",value:function renderContainer(a){return"<div class=\"job-af-widget\">"+a+"</div>"}/**
     * Return rendered job widget item
     * @param {*} job 
     */},{key:"renderWidgetItem",value:function renderWidgetItem(a){return"\n            <div class=\"jobs-af-widget-item\">\n                <div class=\"jobs-af-widget-item-photo\"><img src=\"".concat(this.renderWidgetItemPhoto(a.company),"\" /></div>\n                <div class=\"jobs-af-widget-item-content\">\n                    <div class=\"jobs-af-widget-item-content-title\">\n                        <div class=\"title\">\n                            <a target=\"_blank\" href=\"").concat(jobsAfurl.webBase+"jobs/"+a.slug,"\">").concat(a.position,"</a>\n                        </div>\n                    </div>\n                    <div class=\"jobs-af-widget-item-content-details\">\n                        <div class=\"details\">\n                            <span class=\"date\">").concat(this.renderWidgetItemDate(a.expireDate),"</span> | <span>").concat(a.locations[1],"</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ")}/**
     * Handle job widget photo
     * @param {*} company 
     */},{key:"renderWidgetItemPhoto",value:function renderWidgetItemPhoto(a){return"undefined"!=a.businessUnit.logo||null!=a.businessUnit.logo?jobsAfurl.apiBase+"uploadFile/"+a.businessUnit.logo.container+"/"+a.businessUnit.logo.name:"undefined"!=a.logo||null!=a.logo?jobsAfurl.apiBase+"uploadFile/"+a.logo.container+"/"+a.logo.name:"https://www.jobs.af/assets/img/img/company.jpg"}/**
     * Handle and convert job close date to human readable
     * @param {*} dateString 
     */},{key:"renderWidgetItemDate",value:function renderWidgetItemDate(a){var b=new Date(a);return["January","February","March","April","May","June","July","August","September","October","November","December"][b.getMonth()]+" "+(b.getDay()+1)+", "+b.getFullYear()}}]),JobsAfWidget}(),JobsAf=/*#__PURE__*/function(){/**
     * Construct class
     * @param {*} htmlDom 
     */function JobsAf(a){var b=this;_classCallCheck(this,JobsAf),this.domData={object:null,orgSlug:"",domIdentifier:"",type:"list"},this.pagination={hasPaginate:!1,rowsPerPage:25,totalRows:0,limit:25,skip:0,totalPages:1,currentPage:1,/**
             * Go to next page if list is is more than rows-per-page
             */goNextPage:function goNextPage(){b.pagination.skip+=b.pagination.rowsPerPage,b.cycledApiCall("next",function(){return b.renderContent()})},/**
             * Go to prev page
             */goPrevPage:function goPrevPage(){b.pagination.skip-=b.pagination.rowsPerPage,b.cycledApiCall("prev",function(){return b.renderContent()})}},this.jobs=[],this.domData.orgSlug=a.getAttribute("data-org-slug"),this.domData.domIdentifier=a.getAttribute("id"),this.domData.type=a.getAttribute("data-type"),this.domData.object=a,this.pagination.rowsPerPage=parseInt(a.getAttribute("data-perpage")),this.pagination.limit=parseInt(a.getAttribute("data-perpage")),this.pagination.hasPaginate="slider"!=a.getAttribute("data-type")&&"true"==a.getAttribute("data-has-paginate")}/**
     * Load Api
     * Load the jobs for the first time
     */return _createClass(JobsAf,[{key:"initialApiCall",value:function initialApiCall(a){var b=this,c={limit:this.pagination.limit,skip:this.pagination.skip},d=axiosjs.get(jobsAfurl.apiBase+"jobs/company/"+this.domData.orgSlug,{params:{filter:c}}),e=axiosjs.get(jobsAfurl.apiBase+"jobs/company/"+this.domData.orgSlug+"/count");axiosjs.all([d,e]).then(axiosjs.spread(function(){for(var c=arguments.length,d=Array(c),e=0;e<c;e++)d[e]=arguments[e];b.jobs=d[0].data,b.pagination.totalRows=parseInt(d[1].data),b.pagination.totalPages=parseInt(b.pagination.totalRows/b.pagination.rowsPerPage)+(0<b.pagination.totalRows%b.pagination.rowsPerPage?1:0),a()}))["catch"](function(a){return b.renderErrorMessage(a)})}},{key:"cycledApiCall",value:function cycledApiCall(){var a=this,b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"next",c=1<arguments.length?arguments[1]:void 0,d={limit:this.pagination.limit,skip:this.pagination.skip};this.renderLoadingBar(),axiosjs.get(jobsAfurl.apiBase+"jobs/company/"+this.domData.orgSlug,{params:{filter:d}}).then(function(d){"next"==b?a.pagination.currentPage++:"prev"==b&&a.pagination.currentPage--,a.jobs=d.data,c()})["catch"](function(){return a.renderErrorMessage()})}/**
     * Initialize function
     */},{key:"initialize",value:function initialize(){var a=this;this.initialApiCall(function(){return a.renderContent()})}/**
     * Render jobs content
     */},{key:"renderContent",value:function renderContent(){var a="";if(0<this.pagination.totalRows){var b="";if("widget"==this.domData.type){var c=new JobsAfWidget(this.jobs);b=c.getContainer()}else if("table"==this.domData.type){var d=new JobsAfTable(this.jobs);b=d.getContainer()}else{var e=new JobsAfList(this.jobs);b=e.getContainer()}b+="<div class='jobs-af-footer'>",this.pagination.hasPaginate&&(b+=this.renderPagination()),b+="<div class='jobs-af-branding'>Powered by <a href=\"https://www.jobs.af\">Jobs.af</a></div>",b+="</div>",a=b}else a=this.renderNoJobMessage();this.domData.object.innerHTML=a}/**
     * Render pagination links
     */},{key:"renderPagination",value:function renderPagination(){var a="",b=!1,c=!1;return 1==this.pagination.currentPage&&(b=!0),this.pagination.currentPage==this.pagination.totalPages&&(c=!0),a="<div class=\"job-af-pagination\">",a+="<span class='page-counter'>Page ".concat(this.pagination.currentPage," of ").concat(this.pagination.totalPages,"</span>"),b||(a+="<a data-id='".concat(this.domData.domIdentifier,"' onClick=\"jobsAfPrevPage(this)\" class=\"job-af-paginate-item job-af-paginate-prev\">Prev</a>")),b||c||(a+="<span class='job-af-paginate-spacer'></span>"),c||(a+="<a data-id='".concat(this.domData.domIdentifier,"' onClick=\"jobsAfNextPage(this)\" class=\"job-af-paginate-item job-af-paginate-next\">Next</a>")),a+="</div>",a}/**
     * Render and display an error message if error occured while loading jobs
     * @param {*} err 
     */},{key:"renderErrorMessage",value:function renderErrorMessage(a){console.log(a),this.domData.object.innerHTML="\n            <div class=\"jobs-af-loading-error\">\n                An error occured while loading vacancies.\n            </div>\n        "}/**
     * Return a loding bar
     */},{key:"renderLoadingBar",value:function renderLoadingBar(){this.domData.object.innerHTML="\n        <div class='jobs-af-loading-container'>\n            <div class=\"job-af-loading-image\">\n                <svg width=\"32\" height=\"32\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#161616\">\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                        <g transform=\"translate(1 1)\" stroke-width=\"2\">\n                            <circle stroke-opacity=\".2\" cx=\"18\" cy=\"18\" r=\"18\"/>\n                            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                                <animateTransform\n                                    attributeName=\"transform\"\n                                    type=\"rotate\"\n                                    from=\"0 18 18\"\n                                    to=\"360 18 18\"\n                                    dur=\"1s\"\n                                    repeatCount=\"indefinite\"/>\n                            </path>\n                        </g>\n                    </g>\n                </svg>\n            </div>\n            <span class='jobs-af-loading-label'>Loading Jobs</span>\n        </div>\n        "}/**
     * Return a empty job message
     */},{key:"renderNoJobMessage",value:function renderNoJobMessage(){return"\n            <div class=\"jobs-af-no-vacancy\">\n                <img src=\"https://d1710klmre1nu.cloudfront.net/assets/img/img/404.png\" class=\"image\" />\n                <div class=\"text\">No vacancies are available for now.</div>\n            </div>  \n        "}}]),JobsAf}();/**
 * jobs_af base urls
 */document.querySelectorAll(".jobs-af").forEach(function(a){jobs_af.push({id:a.getAttribute("id"),class:new JobsAf(a)}),jobs_af.filter(function(b){return b.id===a.getAttribute("id")})[0]["class"].initialize()});/**
 * Handle next page
 * @param {*} button 
 */function jobsAfNextPage(a){jobs_af.filter(function(b){return b.id===a.getAttribute("data-id")})[0]["class"].pagination.goNextPage()}/**
 * Handle prev page
 * @param {*} button 
 */function jobsAfPrevPage(a){jobs_af.filter(function(b){return b.id===a.getAttribute("data-id")})[0]["class"].pagination.goPrevPage()}
